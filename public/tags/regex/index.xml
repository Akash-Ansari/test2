<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>regex on Blackburn Theme Demo</title>
    <link>/tags/regex/</link>
    <description>Recent content in regex on Blackburn Theme Demo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016. All rights reserved.</copyright>
    <lastBuildDate>Sat, 28 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/regex/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sample Post 1</title>
      <link>/post/sample-post-1/</link>
      <pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/sample-post-1/</guid>
      <description>#Load packagespacman::p_load(tidyverse, stringr)str_detect() is used to detect whether a string contains a certain pattern. At the most basic use of these functions, we can match strings of text. For instance
jr1 = data.frame(sent = c(&amp;quot;Theo is first&amp;quot;, &amp;quot;Esther is second&amp;quot;, &amp;quot;Colin - third&amp;quot;))jr1## sent## 1 Theo is first## 2 Esther is second## 3 Colin - thirdjr1 %&amp;gt;% filter(str_detect(sent, &amp;quot;Theo&amp;quot;))## sent## 1 Theo is firstjr = c(&amp;quot;Theo is first&amp;quot;, &amp;quot;Esther is second&amp;quot;, &amp;quot;Colin - third&amp;quot;)str_detect(jr, &amp;quot;Theo&amp;quot;)## [1] TRUE FALSE FALSEstr_detect(jr, &amp;quot;is&amp;quot;)## [1] TRUE TRUE FALSESo str_detect() will return TRUE when the element contains the pattern we searched for.</description>
    </item>
    
  </channel>
</rss>